pragma solidity ^0.8.0;

interface IPriceCalculation {
    function calculatePriceImpact(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) external view returns (uint256);
}

contract UniswapV3 {
    address private _priceCalculation;

    function setPriceCalculation(address priceCalculation_) external {
        require(priceCalculation_ != address(0), "UniswapV3: PriceCalculation address can't be zero");
        _priceCalculation = priceCalculation_;
    }

    function getPriceImpact(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) public view returns (uint256) {
        require(_priceCalculation != address(0), "UniswapV3: PriceCalculation address not set");
        return IPriceCalculation(_priceCalculation).calculatePriceImpact(amountIn, reserveIn, reserveOut);
    }
}

contract PriceCalculation is IPriceCalculation {
    function calculatePriceImpact(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) external view override returns (uint256) {
  
    }
}